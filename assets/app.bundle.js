/*! For license information please see app.bundle.js.LICENSE.txt */
(()=>{var e,t,r,n,o,i,a,d={347:(e,t,r)=>{"use strict";r(141);class n{constructor(){this.figcaptionId=0,this.userSettings=null}init(e,t,r){this.userSettings=r;const n=document.createElement("figure"),o=document.createElement("figcaption"),i=document.createElement("img"),a=e.querySelector("img"),d=document.createElement("div");n.style.opacity="0",a&&(i.alt=a.alt||""),i.setAttribute("src",""),i.setAttribute("data-src",e.href),e.hasAttribute("data-srcset")&&i.setAttribute("srcset",e.getAttribute("data-srcset")),n.appendChild(i),this.userSettings.captions&&("function"==typeof this.userSettings.captionText?o.textContent=this.userSettings.captionText(e):"self"===this.userSettings.captionsSelector&&e.getAttribute(this.userSettings.captionAttribute)?o.textContent=e.getAttribute(this.userSettings.captionAttribute):"img"===this.userSettings.captionsSelector&&a&&a.getAttribute(this.userSettings.captionAttribute)&&(o.textContent=a.getAttribute(this.userSettings.captionAttribute)),o.textContent&&(o.id=`tobii-figcaption-${this.figcaptionId}`,n.appendChild(o),i.setAttribute("aria-labelledby",o.id),++this.figcaptionId)),t.appendChild(n),d.className="tobii__loader",d.setAttribute("role","progressbar"),d.setAttribute("aria-label",this.userSettings.loadingIndicatorLabel),t.appendChild(d),t.setAttribute("data-type","image"),t.classList.add("tobii-image")}onPreload(e){this.onLoad(e)}onLoad(e){const t=e.querySelector("img");if(!t.hasAttribute("data-src"))return;const r=e.querySelector("figure"),n=e.querySelector(".tobii__loader");t.addEventListener("load",(()=>{e.removeChild(n),r.style.opacity="1"})),t.addEventListener("error",(()=>{e.removeChild(n),r.style.opacity="1"})),t.setAttribute("src",t.getAttribute("data-src")),t.removeAttribute("data-src")}onLeave(e){}onCleanup(e){}onReset(){this.figcaptionId=0}}class o{constructor(){this.userSettings=null}init(e,t,r){this.userSettings=r;const n=e.hasAttribute("data-target")?e.getAttribute("data-target"):e.getAttribute("href");t.setAttribute("data-HREF",n),e.getAttribute("data-allow")&&t.setAttribute("data-allow",e.getAttribute("data-allow")),e.hasAttribute("data-width")&&t.setAttribute("data-width",`${e.getAttribute("data-width")}`),e.hasAttribute("data-height")&&t.setAttribute("data-height",`${e.getAttribute("data-height")}`),t.setAttribute("data-type","iframe"),t.classList.add("tobii-iframe")}onPreload(e){}onLoad(e){let t=e.querySelector("iframe");const r=document.createElement("div");if(r.className="tobii__loader",r.setAttribute("role","progressbar"),r.setAttribute("aria-label",this.userSettings.loadingIndicatorLabel),e.appendChild(r),null==t){t=document.createElement("iframe");const r=e.getAttribute("data-href");t.setAttribute("frameborder","0"),t.setAttribute("src",r),t.setAttribute("allowfullscreen",""),r.indexOf("youtube.com")>-1?t.setAttribute("allow","accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"):r.indexOf("vimeo.com")>-1?t.setAttribute("allow","autoplay; picture-in-picture"):e.hasAttribute("data-allow")&&t.setAttribute("allow",e.getAttribute("data-allow")),e.getAttribute("data-width")&&(t.style.maxWidth=`${e.getAttribute("data-width")}`),e.getAttribute("data-height")&&(t.style.maxHeight=`${e.getAttribute("data-height")}`),t.style.opacity="0",e.appendChild(t),t.addEventListener("load",(()=>{t.style.opacity="1";const r=e.querySelector(".tobii__loader");r&&e.removeChild(r)})),t.addEventListener("error",(()=>{t.style.opacity="1";const r=e.querySelector(".tobii__loader");r&&e.removeChild(r)}))}else t.setAttribute("src",e.getAttribute("data-href"))}onLeave(e){}onCleanup(e){const t=e.querySelector("iframe");t.setAttribute("src",""),t.style.opacity="0"}onReset(){}}class i{constructor(){this.userSettings=null}init(e,t,r){this.userSettings=r;const n=e.hasAttribute("data-target")?e.getAttribute("data-target"):e.getAttribute("href"),o=document.querySelector(n).cloneNode(!0);if(!o)throw new Error(`Ups, I can't find the target ${n}.`);t.appendChild(o),t.setAttribute("data-type","html"),t.classList.add("tobii-html")}onPreload(e){}onLoad(e){const t=e.querySelector("video");t&&(t.hasAttribute("data-time")&&t.readyState>0&&(t.currentTime=t.getAttribute("data-time")),this.userSettings.autoplayVideo&&t.play())}onLeave(e){const t=e.querySelector("video");t&&(t.paused||t.pause(),t.readyState>0&&t.setAttribute("data-time",t.currentTime))}onCleanup(e){const t=e.querySelector("video");if(t&&t.readyState>0&&t.readyState<3&&t.duration!==t.currentTime){const r=t.cloneNode(!0);this._removeSources(t),t.load(),t.parentNode.removeChild(t),e.appendChild(r)}}onReset(){}_removeSources(e){const t=e.querySelectorAll("src");t&&t.forEach((e=>{e.setAttribute("src","")}))}}class a{constructor(){this.playerId=0,this.PLAYER=[],this.userSettings=null}init(e,t,r){this.userSettings=r;const n=document.createElement("div");t.appendChild(n),this.PLAYER[this.playerId]=new window.YT.Player(n,{host:"https://www.youtube-nocookie.com",height:e.getAttribute("data-height")||"360",width:e.getAttribute("data-width")||"640",videoId:e.getAttribute("data-id"),playerVars:{controls:e.getAttribute("data-controls")||1,rel:0,playsinline:1}}),t.setAttribute("data-player",this.playerId),t.setAttribute("data-type","youtube"),t.classList.add("tobii-youtube"),this.playerId++}onPreload(e){}onLoad(e){this.userSettings.autoplayVideo&&this.PLAYER[e.getAttribute("data-player")].playVideo()}onLeave(e){1===this.PLAYER[e.getAttribute("data-player")].getPlayerState()&&this.PLAYER[e.getAttribute("data-player")].pauseVideo()}onCleanup(e){1===this.PLAYER[e.getAttribute("data-player")].getPlayerState()&&this.PLAYER[e.getAttribute("data-player")].pauseVideo()}onReset(){}}var d=r(630),s=r.n(d);new function e(t){const r={image:new n,html:new i,iframe:new o,youtube:new a},d=['a[href]:not([tabindex^="-"]):not([inert])','area[href]:not([tabindex^="-"]):not([inert])',"input:not([disabled]):not([inert])","select:not([disabled]):not([inert])","textarea:not([disabled]):not([inert])","button:not([disabled]):not([inert])",'iframe:not([tabindex^="-"]):not([inert])','audio:not([tabindex^="-"]):not([inert])','video:not([tabindex^="-"]):not([inert])','[contenteditable]:not([tabindex^="-"]):not([inert])','[tabindex]:not([tabindex^="-"]):not([inert])'];let s={};const l=[],c={gallery:[],slider:null,sliderElements:[],elementsLength:0,currentIndex:0,x:0};let u=null,p=null,f=null,h=null,m=null,b={},g=!1,v=!1,y=!1,w=null,E=null,A=null,x=!1,L=!1,_={},k=null,I=null;const S=e=>{if(null===document.querySelector('[data-type="youtube"]')||L)O(e);else{if(null===document.getElementById("iframe_api")){const e=document.createElement("script"),t=document.getElementsByTagName("script")[0];e.id="iframe_api",e.src="https://www.youtube.com/iframe_api",t.parentNode.insertBefore(e,t)}-1===l.indexOf(e)&&l.push(e),window.onYouTubePlayerAPIReady=()=>{l.forEach((e=>{O(e)})),L=!0}}},C=e=>e.hasAttribute("data-group")?e.getAttribute("data-group"):"default",O=e=>{if(k=C(e),Object.prototype.hasOwnProperty.call(_,k)||(_[k]=JSON.parse(JSON.stringify(c)),j()),-1!==_[k].gallery.indexOf(e))throw new Error("Ups, element already added.");if(_[k].gallery.push(e),_[k].elementsLength++,s.zoom&&e.querySelector("img")&&"false"!==e.getAttribute("data-zoom")||"true"===e.getAttribute("data-zoom")){const t=document.createElement("div");t.className="tobii-zoom__icon",t.innerHTML=s.zoomText,e.classList.add("tobii-zoom"),e.appendChild(t)}e.addEventListener("click",V),D(e),ce()&&k===I&&(de(),se(null))},P=e=>{const t=C(e);if(-1===_[t].gallery.indexOf(e))throw new Error(`Ups, I can't find a slide for the element ${e}.`);{const r=_[t].gallery.indexOf(e),n=_[t].sliderElements[r];if(ce()&&t===I&&r===_[t].currentIndex){if(1===_[t].elementsLength)throw q(),new Error("Ups, I've closed. There are no slides more to show.");0===_[t].currentIndex?U():R()}if(_[t].elementsLength--,s.zoom&&e.querySelector(".tobii-zoom__icon")){const t=e.querySelector(".tobii-zoom__icon");t.parentNode.classList.remove("tobii-zoom"),t.parentNode.removeChild(t)}e.removeEventListener("click",V),n.parentNode.removeChild(n)}},j=()=>{_[k].slider=document.createElement("div"),_[k].slider.className="tobii__slider",_[k].slider.setAttribute("aria-hidden","true"),u.appendChild(_[k].slider)},D=e=>{const t=T(e),r=document.createElement("div"),n=document.createElement("div");r.className="tobii__slide",r.style.position="absolute",r.style.left=100*_[k].x+"%",r.setAttribute("aria-hidden","true"),t.init(e,n,s),r.appendChild(n),_[k].slider.appendChild(r),_[k].sliderElements.push(r),++_[k].x},T=e=>{const t=e.getAttribute("data-type");return void 0!==r[t]?r[t]:(e.hasAttribute("data-type")&&console.log("Unknown lightbox element type: "+t),r.image)},N=e=>{if(I=null!==I?I:k,ce())throw new Error("Ups, I'm aleady open.");if(!ce()&&(e||(e=0),-1===e||e>=_[I].elementsLength))throw new Error(`Ups, I can't find slide ${e}.`);document.documentElement.classList.add("tobii-is-open"),document.body.classList.add("tobii-is-open"),document.body.classList.add("tobii-is-open-"+I),de(),s.close||(h.disabled=!1,h.setAttribute("aria-hidden","true")),w=document.activeElement;const t=window.location.href;window.history.pushState({tobii:"close"},"Image",t),_[I].currentIndex=e,X(),ie(),M(_[I].currentIndex),_[I].slider.setAttribute("aria-hidden","false"),u.setAttribute("aria-hidden","false"),se(null),H(_[I].currentIndex+1),H(_[I].currentIndex-1),_[I].slider.classList.add("tobii__slider--animate");const r=new window.CustomEvent("open",{detail:{group:I}});u.dispatchEvent(r)},q=()=>{if(!ce())throw new Error("Ups, I'm already closed.");document.documentElement.classList.remove("tobii-is-open"),document.body.classList.remove("tobii-is-open"),document.body.classList.remove("tobii-is-open-"+I),ae(),null!==window.history.state&&"close"===window.history.state.tobii&&window.history.back(),w.focus(),$(_[I].currentIndex),z(_[I].currentIndex),u.setAttribute("aria-hidden","true"),_[I].slider.setAttribute("aria-hidden","true"),_[I].currentIndex=0,_[I].slider.classList.remove("tobii__slider--animate");const e=new window.CustomEvent("close",{detail:{group:I}});u.dispatchEvent(e)},H=e=>{if(void 0===_[I].sliderElements[e])return;const t=_[I].sliderElements[e].querySelector("[data-type]");T(t).onPreload(t)},M=e=>{if(void 0===_[I].sliderElements[e])return;const t=_[I].sliderElements[e].querySelector("[data-type]"),r=T(t);_[I].sliderElements[e].classList.add("tobii__slide--is-active"),_[I].sliderElements[e].setAttribute("aria-hidden","false"),r.onLoad(t)},R=()=>{if(!ce())throw new Error("Ups, I'm closed.");_[I].currentIndex>0&&($(_[I].currentIndex),M(--_[I].currentIndex),se("left"),z(_[I].currentIndex+1),H(_[I].currentIndex-1));const e=new window.CustomEvent("previous",{detail:{group:I}});u.dispatchEvent(e)},U=()=>{if(!ce())throw new Error("Ups, I'm closed.");_[I].currentIndex<_[I].elementsLength-1&&($(_[I].currentIndex),M(++_[I].currentIndex),se("right"),z(_[I].currentIndex-1),H(_[I].currentIndex+1));const e=new window.CustomEvent("next",{detail:{group:I}});u.dispatchEvent(e)},Y=e=>{if(ce())throw new Error("Ups, I'm open.");if(!e)throw new Error("Ups, no group specified.");if(e&&!Object.prototype.hasOwnProperty.call(_,e))throw new Error(`Ups, I don't have a group called "${e}".`);I=e},$=e=>{if(void 0===_[I].sliderElements[e])return;const t=_[I].sliderElements[e].querySelector("[data-type]"),r=T(t);_[I].sliderElements[e].classList.remove("tobii__slide--is-active"),_[I].sliderElements[e].setAttribute("aria-hidden","true"),r.onLeave(t)},z=e=>{if(void 0===_[I].sliderElements[e])return;const t=_[I].sliderElements[e].querySelector("[data-type]");T(t).onCleanup(t)},B=()=>{I=null!==I?I:k,E=-_[I].currentIndex*u.offsetWidth,_[I].slider.style.transform=`translate3d(${E}px, 0, 0)`,A=E},X=()=>{b={startX:0,endX:0,startY:0,endY:0}},W=()=>{const e=b.endX-b.startX,t=b.endY-b.startY,r=Math.abs(e),n=Math.abs(t);e>0&&r>s.threshold&&_[I].currentIndex>0?R():e<0&&r>s.threshold&&_[I].currentIndex!==_[I].elementsLength-1?U():t<0&&n>s.threshold&&s.swipeClose?q():B()},F=()=>{x||(x=!0,window.requestAnimationFrame((()=>{B(),x=!1})))},V=e=>{e.preventDefault(),I=C(e.currentTarget),N(_[I].gallery.indexOf(e.currentTarget))},K=e=>{e.target===p?R():e.target===f?U():(e.target===h||!1===g&&!1===v&&e.target.classList.contains("tobii__slide")&&s.docClose)&&q(),e.stopPropagation()},G=e=>{const t=Array.prototype.slice.call(u.querySelectorAll(`.tobii__btn:not([disabled]), .tobii__slide--is-active ${d.join(", .tobii__slide--is-active ")}`)).filter((e=>!!(e.offsetWidth||e.offsetHeight||e.getClientRects().length))),r=t.indexOf(document.activeElement);9===e.keyCode||"Tab"===e.code?e.shiftKey&&0===r?(t[t.length-1].focus(),e.preventDefault()):e.shiftKey||r!==t.length-1||(t[0].focus(),e.preventDefault()):27===e.keyCode||"Escape"===e.code?(e.preventDefault(),q()):37===e.keyCode||"ArrowLeft"===e.code?(e.preventDefault(),R()):39!==e.keyCode&&"ArrowRight"!==e.code||(e.preventDefault(),U())},J=e=>{pe(e.target)||(e.stopPropagation(),g=!1,v=!1,y=!0,b.startX=e.touches[0].pageX,b.startY=e.touches[0].pageY,ue()&&_[I].slider.classList.add("tobii__slider--is-dragging"))},Z=e=>{e.stopPropagation(),y&&(b.endX=e.touches[0].pageX,b.endY=e.touches[0].pageY,oe())},Q=e=>{e.stopPropagation(),y=!1,_[I].slider.classList.remove("tobii__slider--is-dragging"),b.endX&&W(),X()},ee=e=>{pe(e.target)||(e.preventDefault(),e.stopPropagation(),g=!1,v=!1,y=!0,b.startX=e.pageX,b.startY=e.pageY,ue()&&_[I].slider.classList.add("tobii__slider--is-dragging"))},te=e=>{e.preventDefault(),y&&(b.endX=e.pageX,b.endY=e.pageY,oe())},re=e=>{e.stopPropagation(),y=!1,_[I].slider.classList.remove("tobii__slider--is-dragging"),b.endX&&W(),X()},ne=()=>{y=!1},oe=()=>{Math.abs(b.startX-b.endX)>0&&!v&&_[I].elementsLength>1?(_[I].slider.style.transform=`translate3d(${A-Math.round(b.startX-b.endX)}px, 0, 0)`,g=!0,v=!1):Math.abs(b.startY-b.endY)>0&&!g&&s.swipeClose&&(_[I].slider.style.transform=`translate3d(${A}px, -${Math.round(b.startY-b.endY)}px, 0)`,g=!1,v=!0)},ie=()=>{s.keyboard&&window.addEventListener("keydown",G),window.addEventListener("resize",F),window.addEventListener("popstate",q),u.addEventListener("click",K),s.draggable&&ue()&&(u.addEventListener("touchstart",J),u.addEventListener("touchmove",Z),u.addEventListener("touchend",Q),u.addEventListener("mousedown",ee),u.addEventListener("mouseup",re),u.addEventListener("mousemove",te),u.addEventListener("contextmenu",ne))},ae=()=>{s.keyboard&&window.removeEventListener("keydown",G),window.removeEventListener("resize",F),window.removeEventListener("popstate",q),u.removeEventListener("click",K),s.draggable&&ue()&&(u.removeEventListener("touchstart",J),u.removeEventListener("touchmove",Z),u.removeEventListener("touchend",Q),u.removeEventListener("mousedown",ee),u.removeEventListener("mouseup",re),u.removeEventListener("mousemove",te),u.removeEventListener("contextmenu",ne))},de=()=>{(s.draggable&&s.swipeClose&&ue()&&!_[I].slider.classList.contains("tobii__slider--is-draggable")||s.draggable&&_[I].elementsLength>1&&!_[I].slider.classList.contains("tobii__slider--is-draggable"))&&_[I].slider.classList.add("tobii__slider--is-draggable"),!s.nav||1===_[I].elementsLength||"auto"===s.nav&&ue()?(p.setAttribute("aria-hidden","true"),p.disabled=!0,f.setAttribute("aria-hidden","true"),f.disabled=!0):(p.setAttribute("aria-hidden","false"),p.disabled=!1,f.setAttribute("aria-hidden","false"),f.disabled=!1),m.setAttribute("aria-hidden",s.counter&&1!==_[I].elementsLength?"false":"true")},se=e=>{B(),m.textContent=`${_[I].currentIndex+1}/${_[I].elementsLength}`,(e=>{(!0===s.nav||"auto"===s.nav)&&!ue()&&_[I].elementsLength>1?(p.setAttribute("aria-hidden","true"),p.disabled=!0,f.setAttribute("aria-hidden","true"),f.disabled=!0,1===_[I].elementsLength?s.close&&h.focus():0===_[I].currentIndex?(f.setAttribute("aria-hidden","false"),f.disabled=!1,f.focus()):_[I].currentIndex===_[I].elementsLength-1?(p.setAttribute("aria-hidden","false"),p.disabled=!1,p.focus()):(p.setAttribute("aria-hidden","false"),p.disabled=!1,f.setAttribute("aria-hidden","false"),f.disabled=!1,"left"===e?p.focus():f.focus())):s.close&&h.focus()})(e)},le=()=>{ce()&&q(),Object.entries(_).forEach((e=>{e[1].gallery.forEach((e=>{P(e)}))})),_={},k=I=null;for(const e in r)r[e].onReset()},ce=()=>"false"===u.getAttribute("aria-hidden"),ue=()=>"ontouchstart"in window,pe=e=>-1!==["TEXTAREA","OPTION","INPUT","SELECT"].indexOf(e.nodeName)||e===p||e===f||e===h;return(e=>{if(document.querySelector("div.tobii"))return void console.log("Multiple lightbox instances not supported.");s=(e=>({selector:".lightbox",captions:!0,captionsSelector:"img",captionAttribute:"alt",captionText:null,nav:"auto",navText:['<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" aria-hidden="true" focusable="false"><path stroke="none" d="M0 0h24v24H0z"/><polyline points="15 6 9 12 15 18" /></svg>','<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" aria-hidden="true" focusable="false"><path stroke="none" d="M0 0h24v24H0z"/><polyline points="9 6 15 12 9 18" /></svg>'],navLabel:["Previous image","Next image"],close:!0,closeText:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" aria-hidden="true" focusable="false"><path stroke="none" d="M0 0h24v24H0z"/><line x1="18" y1="6" x2="6" y2="18" /><line x1="6" y1="6" x2="18" y2="18" /></svg>',closeLabel:"Close lightbox",loadingIndicatorLabel:"Image loading",counter:!0,download:!1,downloadText:"",downloadLabel:"Download image",keyboard:!0,zoom:!0,zoomText:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" aria-hidden="true" focusable="false"><path stroke="none" d="M0 0h24v24H0z"/><polyline points="16 4 20 4 20 8" /><line x1="14" y1="10" x2="20" y2="4" /><polyline points="8 20 4 20 4 16" /><line x1="4" y1="20" x2="10" y2="14" /><polyline points="16 20 20 20 20 16" /><line x1="14" y1="14" x2="20" y2="20" /><polyline points="8 4 4 4 4 8" /><line x1="4" y1="4" x2="10" y2="10" /></svg>',docClose:!0,swipeClose:!0,hideScrollbar:!0,draggable:!0,threshold:100,rtl:!1,loop:!1,autoplayVideo:!1,modal:!1,theme:"tobii--theme-default",...e}))(e),u||(u=document.createElement("div"),u.setAttribute("role","dialog"),u.setAttribute("aria-hidden","true"),u.classList.add("tobii"),u.classList.add(s.theme),p=document.createElement("button"),p.className="tobii__btn tobii__btn--previous",p.setAttribute("type","button"),p.setAttribute("aria-label",s.navLabel[0]),p.innerHTML=s.navText[0],u.appendChild(p),f=document.createElement("button"),f.className="tobii__btn tobii__btn--next",f.setAttribute("type","button"),f.setAttribute("aria-label",s.navLabel[1]),f.innerHTML=s.navText[1],u.appendChild(f),h=document.createElement("button"),h.className="tobii__btn tobii__btn--close",h.setAttribute("type","button"),h.setAttribute("aria-label",s.closeLabel),h.innerHTML=s.closeText,u.appendChild(h),m=document.createElement("div"),m.className="tobii__counter",u.appendChild(m),document.body.appendChild(u));const t=document.querySelectorAll(s.selector);if(!t)throw new Error(`Ups, I can't find the selector ${s.selector} on this website.`);const r=[];t.forEach((e=>{const t=e.hasAttribute("data-group")?e.getAttribute("data-group"):"default";let n=e.href;e.hasAttribute("data-target")&&(n=e.getAttribute("data-target")),n+="__"+t,void 0!==r[n]?e.addEventListener("click",(e=>{Y(t),N(),e.preventDefault()})):(r[n]=1,S(e))}))})(t),e.open=N,e.previous=R,e.next=U,e.close=q,e.add=S,e.remove=P,e.reset=le,e.destroy=()=>{le(),u.parentNode.removeChild(u)},e.isOpen=ce,e.slidesIndex=()=>_[I].currentIndex,e.select=e=>{const t=_[I].currentIndex;if(!ce())throw new Error("Ups, I'm closed.");if(ce()){if(!e&&0!==e)throw new Error("Ups, no slide specified.");if(e===_[I].currentIndex)throw new Error(`Ups, slide ${e} is already selected.`);if(-1===e||e>=_[I].elementsLength)throw new Error(`Ups, I can't find slide ${e}.`)}_[I].currentIndex=e,$(t),M(e),e<t&&(se("left"),z(t),H(e-1)),e>t&&(se("right"),z(t),H(e+1))},e.slidesCount=()=>_[I].elementsLength,e.selectGroup=Y,e.currentGroup=()=>null!==I?I:k,e.on=(e,t)=>{u.addEventListener(e,t)},e.off=(e,t)=>{u.removeEventListener(e,t)},e},window.addEventListener("load",(function(){(new(s())).showWidget()}))},630:function(e){var t;"undefined"!=typeof self&&self,t=function(){return function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s="./src/index.js")}({"./src/darkmode.js":function(e,t,r){"use strict";function n(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}Object.defineProperty(t,"__esModule",{value:!0}),t.default=t.IS_BROWSER=void 0;var o="undefined"!=typeof window;t.IS_BROWSER=o;var i=function(){function e(t){if(function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),o){t=Object.assign({},{bottom:"32px",right:"32px",left:"unset",time:"0.3s",mixColor:"#fff",backgroundColor:"#fff",buttonColorDark:"#100f2c",buttonColorLight:"#fff",label:"",saveInCookies:!0,autoMatchOsTheme:!0},t);var r="\n      .darkmode-layer {\n        position: fixed;\n        pointer-events: none;\n        background: ".concat(t.mixColor,";\n        transition: all ").concat(t.time," ease;\n        mix-blend-mode: difference;\n      }\n\n      .darkmode-layer--button {\n        width: 2.9rem;\n        height: 2.9rem;\n        border-radius: 50%;\n        right: ").concat(t.right,";\n        bottom: ").concat(t.bottom,";\n        left: ").concat(t.left,";\n      }\n\n      .darkmode-layer--simple {\n        width: 100%;\n        height: 100%;\n        top: 0;\n        left: 0;\n        transform: scale(1) !important;\n      }\n\n      .darkmode-layer--expanded {\n        transform: scale(100);\n        border-radius: 0;\n      }\n\n      .darkmode-layer--no-transition {\n        transition: none;\n      }\n\n      .darkmode-toggle {\n        background: ").concat(t.buttonColorDark,";\n        width: 3rem;\n        height: 3rem;\n        position: fixed;\n        border-radius: 50%;\n        border:none;\n        right: ").concat(t.right,";\n        bottom: ").concat(t.bottom,";\n        left: ").concat(t.left,";\n        cursor: pointer;\n        transition: all 0.5s ease;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n      }\n\n      .darkmode-toggle--white {\n        background: ").concat(t.buttonColorLight,";\n      }\n\n      .darkmode-toggle--inactive {\n        display: none;\n      }\n\n      .darkmode-background {\n        background: ").concat(t.backgroundColor,";\n        position: fixed;\n        pointer-events: none;\n        z-index: -10;\n        width: 100%;\n        height: 100%;\n        top: 0;\n        left: 0;\n      }\n\n      img, .darkmode-ignore {\n        isolation: isolate;\n        display: inline-block;\n      }\n\n      @media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {\n        .darkmode-toggle {display: none !important}\n      }\n\n      @supports (-ms-ime-align:auto), (-ms-accelerator:true) {\n        .darkmode-toggle {display: none !important}\n      }\n    "),n=document.createElement("div"),i=document.createElement("button"),a=document.createElement("div");i.innerHTML=t.label,i.classList.add("darkmode-toggle--inactive"),n.classList.add("darkmode-layer"),a.classList.add("darkmode-background");var d="true"===window.localStorage.getItem("darkmode"),s=t.autoMatchOsTheme&&window.matchMedia("(prefers-color-scheme: dark)").matches,l=null===window.localStorage.getItem("darkmode");(!0===d&&t.saveInCookies||l&&s)&&(n.classList.add("darkmode-layer--expanded","darkmode-layer--simple","darkmode-layer--no-transition"),i.classList.add("darkmode-toggle--white"),document.body.classList.add("darkmode--activated")),document.body.insertBefore(i,document.body.firstChild),document.body.insertBefore(n,document.body.firstChild),document.body.insertBefore(a,document.body.firstChild),this.addStyle(r),this.button=i,this.layer=n,this.saveInCookies=t.saveInCookies,this.time=t.time}}var t,r;return t=e,(r=[{key:"addStyle",value:function(e){var t=document.createElement("link");t.setAttribute("rel","stylesheet"),t.setAttribute("type","text/css"),t.setAttribute("href","data:text/css;charset=UTF-8,"+encodeURIComponent(e)),document.head.appendChild(t)}},{key:"showWidget",value:function(){var e=this;if(o){var t=this.button,r=this.layer,n=1e3*parseFloat(this.time);t.classList.add("darkmode-toggle"),t.classList.remove("darkmode-toggle--inactive"),t.setAttribute("aria-label","Activate dark mode"),t.setAttribute("aria-checked","false"),t.setAttribute("role","checkbox"),r.classList.add("darkmode-layer--button"),t.addEventListener("click",(function(){var o=e.isActivated();o?(r.classList.remove("darkmode-layer--simple"),t.setAttribute("disabled",!0),setTimeout((function(){r.classList.remove("darkmode-layer--no-transition"),r.classList.remove("darkmode-layer--expanded"),t.removeAttribute("disabled")}),1)):(r.classList.add("darkmode-layer--expanded"),t.setAttribute("disabled",!0),setTimeout((function(){r.classList.add("darkmode-layer--no-transition"),r.classList.add("darkmode-layer--simple"),t.removeAttribute("disabled")}),n)),t.classList.toggle("darkmode-toggle--white"),document.body.classList.toggle("darkmode--activated"),window.localStorage.setItem("darkmode",!o)}))}}},{key:"toggle",value:function(){if(o){var e=this.layer,t=this.isActivated(),r=this.button;e.classList.toggle("darkmode-layer--simple"),document.body.classList.toggle("darkmode--activated"),window.localStorage.setItem("darkmode",!t),r.setAttribute("aria-label","De-activate dark mode"),r.setAttribute("aria-checked","true")}}},{key:"isActivated",value:function(){return o?document.body.classList.contains("darkmode--activated"):null}}])&&n(t.prototype,r),e}();t.default=i},"./src/index.js":function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)if(Object.prototype.hasOwnProperty.call(e,r)){var n=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(e,r):{};n.get||n.set?Object.defineProperty(t,r,n):t[r]=e[r]}return t.default=e,t}(r("./src/darkmode.js")),o=n.default;t.default=o,n.IS_BROWSER&&function(e){e.Darkmode=n.default}(window),e.exports=t.default}})},e.exports=t()},783:(e,t,r)=>{"use strict";var n=r(618),o=Object.create(null),i="undefined"==typeof document,a=Array.prototype.forEach;function d(){}function s(e,t){if(!t){if(!e.href)return;t=e.href.split("?")[0]}if(c(t)&&!1!==e.isLoaded&&t&&t.indexOf(".css")>-1){e.visited=!0;var r=e.cloneNode();r.isLoaded=!1,r.addEventListener("load",(function(){r.isLoaded||(r.isLoaded=!0,e.parentNode.removeChild(e))})),r.addEventListener("error",(function(){r.isLoaded||(r.isLoaded=!0,e.parentNode.removeChild(e))})),r.href="".concat(t,"?").concat(Date.now()),e.nextSibling?e.parentNode.insertBefore(r,e.nextSibling):e.parentNode.appendChild(r)}}function l(){var e=document.querySelectorAll("link");a.call(e,(function(e){!0!==e.visited&&s(e)}))}function c(e){return!!/^[a-zA-Z][a-zA-Z\d+\-.]*:/.test(e)}e.exports=function(e,t){if(i)return console.log("no window.document found, will not HMR CSS"),d;var r,u,p=function(e){var t=o[e];if(!t){if(document.currentScript)t=document.currentScript.src;else{var r=document.getElementsByTagName("script"),i=r[r.length-1];i&&(t=i.src)}o[e]=t}return function(e){if(!t)return null;var r=t.split(/([^\\/]+)\.js$/),o=r&&r[1];return o&&e?e.split(",").map((function(e){var r=new RegExp("".concat(o,"\\.js$"),"g");return n(t.replace(r,"".concat(e.replace(/{fileName}/g,o),".css")))})):[t.replace(".js",".css")]}}(e);return r=function(){var e=p(t.filename),r=function(e){if(!e)return!1;var t=document.querySelectorAll("link"),r=!1;return a.call(t,(function(t){if(t.href){var o=function(e,t){var r;return e=n(e,{stripWWW:!1}),t.some((function(n){e.indexOf(t)>-1&&(r=n)})),r}(t.href,e);c(o)&&!0!==t.visited&&o&&(s(t,o),r=!0)}})),r}(e);if(t.locals)return console.log("[HMR] Detected local css modules. Reload all css"),void l();r?console.log("[HMR] css reload %s",e.join(" ")):(console.log("[HMR] Reload all css"),l())},50,u=0,function(){var e=this,t=arguments,n=function(){return r.apply(e,t)};clearTimeout(u),u=setTimeout(n,50)}}},618:e=>{"use strict";e.exports=function(e){if(e=e.trim(),/^data:/i.test(e))return e;var t=-1!==e.indexOf("//")?e.split("//")[0]+"//":"",r=e.replace(new RegExp(t,"i"),"").split("/"),n=r[0].toLowerCase().replace(/\.$/,"");return r[0]="",t+n+r.reduce((function(e,t){switch(t){case"..":e.pop();break;case".":break;default:e.push(t)}return e}),[]).join("/")}},141:(e,t,r)=>{"use strict";var n=r(783)(e.id,{locals:!1});e.hot.dispose(n),e.hot.accept(void 0,n)}},s={};function l(e){var t=s[e];if(void 0!==t){if(void 0!==t.error)throw t.error;return t.exports}var r=s[e]={id:e,exports:{}};try{var n={id:e,module:r,factory:d[e],require:l};l.i.forEach((function(e){e(n)})),r=n.module,n.factory.call(r.exports,r,r.exports,n.require)}catch(e){throw r.error=e,e}return r.exports}l.m=d,l.c=s,l.i=[],l.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return l.d(t,{a:t}),t},l.d=(e,t)=>{for(var r in t)l.o(t,r)&&!l.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},l.hu=e=>e+"."+l.h()+".hot-update.js",l.miniCssF=e=>"app.css",l.hmrF=()=>"app."+l.h()+".hot-update.json",l.h=()=>"24ba7be6623f0270dc34",l.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),e={},t="mobile-app-landingpage-template:",l.l=(r,n,o,i)=>{if(e[r])e[r].push(n);else{var a,d;if(void 0!==o)for(var s=document.getElementsByTagName("script"),c=0;c<s.length;c++){var u=s[c];if(u.getAttribute("src")==r||u.getAttribute("data-webpack")==t+o){a=u;break}}a||(d=!0,(a=document.createElement("script")).charset="utf-8",a.timeout=120,l.nc&&a.setAttribute("nonce",l.nc),a.setAttribute("data-webpack",t+o),a.src=r),e[r]=[n];var p=(t,n)=>{a.onerror=a.onload=null,clearTimeout(f);var o=e[r];if(delete e[r],a.parentNode&&a.parentNode.removeChild(a),o&&o.forEach((e=>e(n))),t)return t(n)},f=setTimeout(p.bind(null,void 0,{type:"timeout",target:a}),12e4);a.onerror=p.bind(null,a.onerror),a.onload=p.bind(null,a.onload),d&&document.head.appendChild(a)}},(()=>{var e,t,r,n,o={},i=l.c,a=[],d=[],s="idle";function c(e){s=e;for(var t=[],r=0;r<d.length;r++)t[r]=d[r].call(null,e);return Promise.all(t)}function u(e){if(0===t.length)return e();var r=t;return t=[],Promise.all(r).then((function(){return u(e)}))}function p(e){if("idle"!==s)throw new Error("check() is only allowed in idle status");return c("check").then(l.hmrM).then((function(n){return n?c("prepare").then((function(){var o=[];return t=[],r=[],Promise.all(Object.keys(l.hmrC).reduce((function(e,t){return l.hmrC[t](n.c,n.r,n.m,e,r,o),e}),[])).then((function(){return u((function(){return e?h(e):c("ready").then((function(){return o}))}))}))})):c(m()?"ready":"idle").then((function(){return null}))}))}function f(e){return"ready"!==s?Promise.resolve().then((function(){throw new Error("apply() is only allowed in ready status")})):h(e)}function h(e){e=e||{},m();var t=r.map((function(t){return t(e)}));r=void 0;var o=t.map((function(e){return e.error})).filter(Boolean);if(o.length>0)return c("abort").then((function(){throw o[0]}));var i=c("dispose");t.forEach((function(e){e.dispose&&e.dispose()}));var a,d=c("apply"),s=function(e){a||(a=e)},l=[];return t.forEach((function(e){if(e.apply){var t=e.apply(s);if(t)for(var r=0;r<t.length;r++)l.push(t[r])}})),Promise.all([i,d]).then((function(){return a?c("fail").then((function(){throw a})):n?h(e).then((function(e){return l.forEach((function(t){e.indexOf(t)<0&&e.push(t)})),e})):c("idle").then((function(){return l}))}))}function m(){if(n)return r||(r=[]),Object.keys(l.hmrI).forEach((function(e){n.forEach((function(t){l.hmrI[e](t,r)}))})),n=void 0,!0}l.hmrD=o,l.i.push((function(h){var m,b,g,v,y=h.module,w=function(r,n){var o=i[n];if(!o)return r;var d=function(t){if(o.hot.active){if(i[t]){var d=i[t].parents;-1===d.indexOf(n)&&d.push(n)}else a=[n],e=t;-1===o.children.indexOf(t)&&o.children.push(t)}else console.warn("[HMR] unexpected require("+t+") from disposed module "+n),a=[];return r(t)},l=function(e){return{configurable:!0,enumerable:!0,get:function(){return r[e]},set:function(t){r[e]=t}}};for(var p in r)Object.prototype.hasOwnProperty.call(r,p)&&"e"!==p&&Object.defineProperty(d,p,l(p));return d.e=function(e){return function(e){switch(s){case"ready":return c("prepare"),t.push(e),u((function(){return c("ready")})),e;case"prepare":return t.push(e),e;default:return e}}(r.e(e))},d}(h.require,h.id);y.hot=(m=h.id,b=y,v={_acceptedDependencies:{},_acceptedErrorHandlers:{},_declinedDependencies:{},_selfAccepted:!1,_selfDeclined:!1,_selfInvalidated:!1,_disposeHandlers:[],_main:g=e!==m,_requireSelf:function(){a=b.parents.slice(),e=g?void 0:m,l(m)},active:!0,accept:function(e,t,r){if(void 0===e)v._selfAccepted=!0;else if("function"==typeof e)v._selfAccepted=e;else if("object"==typeof e&&null!==e)for(var n=0;n<e.length;n++)v._acceptedDependencies[e[n]]=t||function(){},v._acceptedErrorHandlers[e[n]]=r;else v._acceptedDependencies[e]=t||function(){},v._acceptedErrorHandlers[e]=r},decline:function(e){if(void 0===e)v._selfDeclined=!0;else if("object"==typeof e&&null!==e)for(var t=0;t<e.length;t++)v._declinedDependencies[e[t]]=!0;else v._declinedDependencies[e]=!0},dispose:function(e){v._disposeHandlers.push(e)},addDisposeHandler:function(e){v._disposeHandlers.push(e)},removeDisposeHandler:function(e){var t=v._disposeHandlers.indexOf(e);t>=0&&v._disposeHandlers.splice(t,1)},invalidate:function(){switch(this._selfInvalidated=!0,s){case"idle":r=[],Object.keys(l.hmrI).forEach((function(e){l.hmrI[e](m,r)})),c("ready");break;case"ready":Object.keys(l.hmrI).forEach((function(e){l.hmrI[e](m,r)}));break;case"prepare":case"check":case"dispose":case"apply":(n=n||[]).push(m)}},check:p,apply:f,status:function(e){if(!e)return s;d.push(e)},addStatusHandler:function(e){d.push(e)},removeStatusHandler:function(e){var t=d.indexOf(e);t>=0&&d.splice(t,1)},data:o[m]},e=void 0,v),y.parents=a,y.children=[],a=[],h.require=w})),l.hmrC={},l.hmrI={}})(),l.p="/assets/",r=(e,t,r,n)=>{var o=document.createElement("link");return o.rel="stylesheet",o.type="text/css",o.onerror=o.onload=i=>{if(o.onerror=o.onload=null,"load"===i.type)r();else{var a=i&&("load"===i.type?"missing":i.type),d=i&&i.target&&i.target.href||t,s=new Error("Loading CSS chunk "+e+" failed.\n("+d+")");s.code="CSS_CHUNK_LOAD_FAILED",s.type=a,s.request=d,o.parentNode.removeChild(o),n(s)}},o.href=t,document.head.appendChild(o),o},n=(e,t)=>{for(var r=document.getElementsByTagName("link"),n=0;n<r.length;n++){var o=(a=r[n]).getAttribute("data-href")||a.getAttribute("href");if("stylesheet"===a.rel&&(o===e||o===t))return a}var i=document.getElementsByTagName("style");for(n=0;n<i.length;n++){var a;if((o=(a=i[n]).getAttribute("data-href"))===e||o===t)return a}},o=[],i=[],a=e=>({dispose:()=>{for(var e=0;e<o.length;e++){var t=o[e];t.parentNode&&t.parentNode.removeChild(t)}o.length=0},apply:()=>{for(var e=0;e<i.length;e++)i[e].rel="stylesheet";i.length=0}}),l.hmrC.miniCss=(e,t,d,s,c,u)=>{c.push(a),e.forEach((e=>{var t=l.miniCssF(e),a=l.p+t,d=n(t,a);d&&s.push(new Promise(((t,n)=>{var s=r(e,a,(()=>{s.as="style",s.rel="preload",t()}),n);o.push(d),i.push(s)})))}))},(()=>{var e,t,r,n,o=l.hmrS_jsonp=l.hmrS_jsonp||{143:0},i={};function a(e){return new Promise(((t,r)=>{i[e]=t;var n=l.p+l.hu(e),o=new Error;l.l(n,(t=>{if(i[e]){i[e]=void 0;var n=t&&("load"===t.type?"missing":t.type),a=t&&t.target&&t.target.src;o.message="Loading hot update chunk "+e+" failed.\n("+n+": "+a+")",o.name="ChunkLoadError",o.type=n,o.request=a,r(o)}}))}))}function d(i){function a(e){for(var t=[e],r={},n=t.map((function(e){return{chain:[e],id:e}}));n.length>0;){var o=n.pop(),i=o.id,a=o.chain,s=l.c[i];if(s&&(!s.hot._selfAccepted||s.hot._selfInvalidated)){if(s.hot._selfDeclined)return{type:"self-declined",chain:a,moduleId:i};if(s.hot._main)return{type:"unaccepted",chain:a,moduleId:i};for(var c=0;c<s.parents.length;c++){var u=s.parents[c],p=l.c[u];if(p){if(p.hot._declinedDependencies[i])return{type:"declined",chain:a.concat([u]),moduleId:i,parentId:u};-1===t.indexOf(u)&&(p.hot._acceptedDependencies[i]?(r[u]||(r[u]=[]),d(r[u],[i])):(delete r[u],t.push(u),n.push({chain:a.concat([u]),id:u})))}}}}return{type:"accepted",moduleId:e,outdatedModules:t,outdatedDependencies:r}}function d(e,t){for(var r=0;r<t.length;r++){var n=t[r];-1===e.indexOf(n)&&e.push(n)}}l.f&&delete l.f.jsonpHmr,e=void 0;var s={},c=[],u={},p=function(e){console.warn("[HMR] unexpected require("+e.id+") to disposed module")};for(var f in t)if(l.o(t,f)){var h,m=t[f],b=!1,g=!1,v=!1,y="";switch((h=m?a(f):{type:"disposed",moduleId:f}).chain&&(y="\nUpdate propagation: "+h.chain.join(" -> ")),h.type){case"self-declined":i.onDeclined&&i.onDeclined(h),i.ignoreDeclined||(b=new Error("Aborted because of self decline: "+h.moduleId+y));break;case"declined":i.onDeclined&&i.onDeclined(h),i.ignoreDeclined||(b=new Error("Aborted because of declined dependency: "+h.moduleId+" in "+h.parentId+y));break;case"unaccepted":i.onUnaccepted&&i.onUnaccepted(h),i.ignoreUnaccepted||(b=new Error("Aborted because "+f+" is not accepted"+y));break;case"accepted":i.onAccepted&&i.onAccepted(h),g=!0;break;case"disposed":i.onDisposed&&i.onDisposed(h),v=!0;break;default:throw new Error("Unexception type "+h.type)}if(b)return{error:b};if(g)for(f in u[f]=m,d(c,h.outdatedModules),h.outdatedDependencies)l.o(h.outdatedDependencies,f)&&(s[f]||(s[f]=[]),d(s[f],h.outdatedDependencies[f]));v&&(d(c,[h.moduleId]),u[f]=p)}t=void 0;for(var w,E=[],A=0;A<c.length;A++){var x=c[A],L=l.c[x];L&&(L.hot._selfAccepted||L.hot._main)&&u[x]!==p&&!L.hot._selfInvalidated&&E.push({module:x,require:L.hot._requireSelf,errorHandler:L.hot._selfAccepted})}return{dispose:function(){var e;r.forEach((function(e){delete o[e]})),r=void 0;for(var t,n=c.slice();n.length>0;){var i=n.pop(),a=l.c[i];if(a){var d={},u=a.hot._disposeHandlers;for(A=0;A<u.length;A++)u[A].call(null,d);for(l.hmrD[i]=d,a.hot.active=!1,delete l.c[i],delete s[i],A=0;A<a.children.length;A++){var p=l.c[a.children[A]];p&&(e=p.parents.indexOf(i))>=0&&p.parents.splice(e,1)}}}for(var f in s)if(l.o(s,f)&&(a=l.c[f]))for(w=s[f],A=0;A<w.length;A++)t=w[A],(e=a.children.indexOf(t))>=0&&a.children.splice(e,1)},apply:function(e){for(var t in u)l.o(u,t)&&(l.m[t]=u[t]);for(var r=0;r<n.length;r++)n[r](l);for(var o in s)if(l.o(s,o)){var a=l.c[o];if(a){w=s[o];for(var d=[],p=[],f=[],h=0;h<w.length;h++){var m=w[h],b=a.hot._acceptedDependencies[m],g=a.hot._acceptedErrorHandlers[m];if(b){if(-1!==d.indexOf(b))continue;d.push(b),p.push(g),f.push(m)}}for(var v=0;v<d.length;v++)try{d[v].call(null,w)}catch(t){if("function"==typeof p[v])try{p[v](t,{moduleId:o,dependencyId:f[v]})}catch(r){i.onErrored&&i.onErrored({type:"accept-error-handler-errored",moduleId:o,dependencyId:f[v],error:r,originalError:t}),i.ignoreErrored||(e(r),e(t))}else i.onErrored&&i.onErrored({type:"accept-errored",moduleId:o,dependencyId:f[v],error:t}),i.ignoreErrored||e(t)}}}for(var y=0;y<E.length;y++){var A=E[y],x=A.module;try{A.require(x)}catch(t){if("function"==typeof A.errorHandler)try{A.errorHandler(t,{moduleId:x,module:l.c[x]})}catch(r){i.onErrored&&i.onErrored({type:"self-accept-error-handler-errored",moduleId:x,error:r,originalError:t}),i.ignoreErrored||(e(r),e(t))}else i.onErrored&&i.onErrored({type:"self-accept-errored",moduleId:x,error:t}),i.ignoreErrored||e(t)}}return c}}}self.webpackHotUpdatemobile_app_landingpage_template=(e,r,o)=>{for(var a in r)l.o(r,a)&&(t[a]=r[a]);o&&n.push(o),i[e]&&(i[e](),i[e]=void 0)},l.hmrI.jsonp=function(e,o){t||(t={},n=[],r=[],o.push(d)),l.o(t,e)||(t[e]=l.m[e])},l.hmrC.jsonp=function(i,s,c,u,p,f){p.push(d),e={},r=s,t=c.reduce((function(e,t){return e[t]=!1,e}),{}),n=[],i.forEach((function(t){l.o(o,t)&&void 0!==o[t]&&(u.push(a(t)),e[t]=!0)})),l.f&&(l.f.jsonpHmr=function(t,r){e&&!l.o(e,t)&&l.o(o,t)&&void 0!==o[t]&&(r.push(a(t)),e[t]=!0)})},l.hmrM=()=>{if("undefined"==typeof fetch)throw new Error("No browser support: need fetch API");return fetch(l.p+l.hmrF()).then((e=>{if(404!==e.status){if(!e.ok)throw new Error("Failed to fetch update manifest "+e.statusText);return e.json()}}))}})(),l(347)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,